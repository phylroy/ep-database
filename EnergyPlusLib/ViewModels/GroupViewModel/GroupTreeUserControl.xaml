<UserControl x:Class="EnergyPlusLib.ViewModels.GroupViewModel.GroupTreeUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EnergyPlusLib.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <DockPanel>
            <TextBlock DockPanel.Dock="Bottom" TextWrapping="Wrap" FontSize="12">
      When a top-level item (a Region) is expanded for the first time, its list of States 
      is dynamically loaded.  When a State is expanded for the first time, its Cities are
      loaded.  This deferred loading takes place in the ViewModel classes, and the
      TreeView displays the new objects due to data binding.
            </TextBlock>
            <TreeView ItemsSource="{Binding Zones}">
                <TreeView.ItemContainerStyle>
                    <!-- 
        This Style binds a TreeViewItem to a TreeViewItemViewModel. 
        -->
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.Resources>
                    <HierarchicalDataTemplate 
          DataType="{x:Type local:ZoneEnvelopeViewModel}" 
          ItemsSource="{Binding Children}"
          >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding ZoneName}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <DataTemplate DataType="{x:Type local:SurfaceEnvelopeViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding SurfaceName}" />
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>
    </Grid>
</UserControl>
